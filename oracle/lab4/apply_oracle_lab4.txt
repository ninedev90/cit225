SQL> 
SQL> -- insert your SQL statements here ...
SQL> -- start with the validation scripts you find in the seeding.sql script.
SQL> -- copying the seeding.sql file and editing it to conform to this layout is the simplest approach to the lab.
SQL> -- ------------------------------------------------------------------
SQL> --   Query to verify seven rows of chained inserts to the five
SQL> --   dependent tables.
SQL> -- ------------------------------------------------------------------
SQL> --    1. MEMBER
SQL> --    2. CONTACT
SQL> --    3. ADDRESS
SQL> --    4. STREET_ADDRESS
SQL> --    5. TELEPHONE
SQL> -- ------------------------------------------------------------------
SQL> 
SQL> COL member_lab_id	     FORMAT 9999 HEADING "Acct|ID #"
SQL> COL account_number  FORMAT A10  HEADING "Account|Number"
SQL> COL full_name	 FORMAT A16  HEADING "Name|(Last, First MI)"
SQL> COL city		 FORMAT A12  HEADING "City"
SQL> COL state_province  FORMAT A10  HEADING "State"
SQL> COL telephone_lab	     FORMAT A18  HEADING "Telephone"
SQL> SELECT   m.member_lab_id
  2  ,	      m.account_number
  3  ,	      c.last_name || ', ' || c.first_name
  4  ||       CASE
  5  		WHEN c.middle_name IS NOT NULL THEN ' ' || SUBSTR(c.middle_name,1,1)
  6  	      END AS full_name
  7  ,	      a.city
  8  ,	      a.state_province
  9  ,	      t.country_code || '-(' || t.area_code || ') ' || t.telephone_lab_number AS telephone_lab
 10  FROM     member_lab m INNER JOIN contact_lab c ON m.member_lab_id = c.member_lab_id INNER JOIN
 11  	      address_lab a ON c.contact_lab_id = a.contact_lab_id INNER JOIN
 12  	      street_address_lab sa ON a.address_lab_id = sa.address_lab_id INNER JOIN
 13  	      telephone_lab t ON c.contact_lab_id = t.contact_lab_id AND a.address_lab_id = t.address_lab_id
 14  WHERE    last_name IN ('Sweeney','Vizquel','Winn');

no rows selected

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Display the 21 inserts into the item_lab table.
SQL> -- ------------------------------------------------------------------
SQL> SET PAGESIZE 99
SQL> COL item_lab_id		    FORMAT 9999  HEADING "Item|ID #"
SQL> COL common_lookup_lab_meaning  FORMAT A20	HEADING "Item Description"
SQL> COL item_lab_title 	    FORMAT A30	HEADING "Item Title"
SQL> COL item_lab_release_date	    FORMAT A11	HEADING "Item|Release|Date"
SQL> SELECT   i.item_lab_id
  2  ,	      cl.common_lookup_lab_meaning
  3  ,	      i.item_lab_title
  4  ,	      i.item_lab_release_date
  5  FROM     item_lab i INNER JOIN common_lookup_lab cl ON i.item_lab_type = cl.common_lookup_lab_id;

no rows selected

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --   Query to verify five individual rows of chained inserts through
SQL> --   a procedure into the five dependent tables.
SQL> -- ------------------------------------------------------------------
SQL> COL account_number  FORMAT A10  HEADING "Account|Number"
SQL> COL full_name	 FORMAT A20  HEADING "Name|(Last, First MI)"
SQL> COL city		 FORMAT A12  HEADING "City"
SQL> COL state_province  FORMAT A10  HEADING "State"
SQL> COL telephone_lab	     FORMAT A18  HEADING "Telephone"
SQL> SELECT   m.account_number
  2  ,	      c.last_name || ', ' || c.first_name
  3  ||       CASE
  4  		WHEN c.middle_name IS NOT NULL THEN ' ' || SUBSTR(c.middle_name,1,1)
  5  	      END AS full_name
  6  ,	      a.city
  7  ,	      a.state_province
  8  ,	      t.country_code || '-(' || t.area_code || ') ' || t.telephone_lab_number AS telephone_lab
  9  FROM     member_lab m INNER JOIN contact_lab c ON m.member_lab_id = c.member_lab_id INNER JOIN
 10  	      address_lab a ON c.contact_lab_id = a.contact_lab_id INNER JOIN
 11  	      street_address_lab sa ON a.address_lab_id = sa.address_lab_id INNER JOIN
 12  	      telephone_lab t ON c.contact_lab_id = t.contact_lab_id AND a.address_lab_id = t.address_lab_id
 13  WHERE    m.member_lab_type = (SELECT common_lookup_lab_id
 14  			       FROM   common_lookup_lab
 15  			       WHERE  common_lookup_lab_context = 'MEMBER'
 16  			       AND    common_lookup_lab_type = 'INDIVIDUAL');

no rows selected

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --   Query to verify nine rental agreements, some with one and some
SQL> --   with more than one rental item_lab.
SQL> -- ------------------------------------------------------------------
SQL> COL member_lab_id	     FORMAT 9999 HEADING "Member|ID #"
SQL> COL account_number  FORMAT A10  HEADING "Account|Number"
SQL> COL full_name	 FORMAT A20  HEADING "Name|(Last, First MI)"
SQL> COL rental_id	 FORMAT 9999 HEADING "Rent|ID #"
SQL> COL rental_item_lab_id  FORMAT 9999 HEADING "Rent|Item|ID #"
SQL> COL item_lab_title      FORMAT A26  HEADING "Item Title"
SQL> SELECT   m.member_lab_id
  2  ,	      m.account_number
  3  ,	      c.last_name || ', ' || c.first_name
  4  ||       CASE
  5  		WHEN c.middle_name IS NOT NULL THEN ' ' || SUBSTR(c.middle_name,1,1)
  6  	      END AS full_name
  7  ,	      r.rental_id
  8  ,	      ri.rental_item_lab_id
  9  ,	      i.item_lab_title
 10  FROM     member_lab m INNER JOIN contact_lab c ON m.member_lab_id = c.member_lab_id INNER JOIN
 11  	      rental r ON c.contact_lab_id = r.customer_id INNER JOIN
 12  	      rental_item_lab ri ON r.rental_id = ri.rental_id INNER JOIN
 13  	      item_lab i ON ri.item_lab_id = i.item_lab_id
 14  ORDER BY r.rental_id;
         rental_item_lab ri ON r.rental_id = ri.rental_id INNER JOIN
                                             *
ERROR at line 12:
ORA-00904: "RI"."RENTAL_ID": invalid identifier 


SQL> 
SQL> SPOOL OFF
